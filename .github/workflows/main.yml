name: Build, Push, and Deploy to ECS

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout
        uses: actions/checkout@v2  # Use the latest version

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Authenticate with Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      # Step 4: Build, tag, and push the Docker image to Amazon ECR
      - name: Build, tag, and push image to Amazon ECR
        env:
          IMAGE_TAG: ${{ runner.os }}-$(date +'%Y%m%d')  # Use date format (YYYYMMDD)
        run: |
          cd Task4
          docker build -t custom-image:$IMAGE_TAG .
          docker tag custom-image:$IMAGE_TAG  ${{ secrets.ECR_REGISTRY }}/custom-image:$IMAGE_TAG
          docker push ${{ secrets.ECR_REGISTRY }}/custom-image:$IMAGE_TAG

      # Step 5: Download the current task definition
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION }} --query taskDefinition > task-definition.json

      # Step 6: Update the container image in the task definition
      - name: Fill in new image ID in task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.ECS_CONTAINER_NAME }}
          image: ${{ secrets.ECR_REGISTRY }}/custom-image:$IMAGE_TAG

      # Step 7: Deploy the updated task definition
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
